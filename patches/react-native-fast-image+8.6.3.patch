diff --git a/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageViewWithUrl.java b/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageViewWithUrl.java
index 34fcf89..1b53b57 100644
--- a/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageViewWithUrl.java
+++ b/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/FastImageViewWithUrl.java
@@ -142,7 +142,9 @@ class FastImageViewWithUrl extends AppCompatImageView {
                             .apply(FastImageViewConverter
                                     .getOptions(context, imageSource, mSource)
                                     .placeholder(mDefaultSource) // show until loaded
-                                    .fallback(mDefaultSource)); // null will not be treated as error
+                                    .fallback(mDefaultSource)) // // null will not be treated as error
+                            .transform(new ResizeTransformation(8000)); // Apply custom ResizeTransformation with a maximum height of 8000
+
 
             if (key != null)
                 builder.listener(new FastImageRequestListener(key));
diff --git a/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/ResizeTransformation.java b/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/ResizeTransformation.java
new file mode 100644
index 0000000..56a6e2a
--- /dev/null
+++ b/node_modules/react-native-fast-image/android/src/main/java/com/dylanvann/fastimage/ResizeTransformation.java
@@ -0,0 +1,39 @@
+package com.dylanvann.fastimage;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+
+import androidx.annotation.NonNull;
+
+import com.bumptech.glide.load.Transformation;
+import com.bumptech.glide.load.engine.Resource;
+import com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;
+import com.bumptech.glide.load.resource.bitmap.BitmapResource;
+
+import java.security.MessageDigest;
+
+public class ResizeTransformation implements Transformation<Bitmap> {
+    private final int targetHeight;
+
+    public ResizeTransformation(int targetHeight) {
+        this.targetHeight = targetHeight;
+    }
+
+    @NonNull
+    @Override
+    public Resource<Bitmap> transform(@NonNull Context context, @NonNull Resource<Bitmap> resource, int outWidth, int outHeight) {
+        Bitmap toTransform = resource.get();
+        float scaleFactor = (float) targetHeight / (float) toTransform.getHeight();
+        int targetWidth = Math.round(toTransform.getWidth() * scaleFactor);
+
+        BitmapPool pool = GlideApp.get(context).getBitmapPool();
+        Bitmap scaledBitmap = Bitmap.createScaledBitmap(toTransform, targetWidth, targetHeight, true);
+
+        return BitmapResource.obtain(scaledBitmap, pool);
+    }
+
+    @Override
+    public void updateDiskCacheKey(@NonNull MessageDigest messageDigest) {
+        messageDigest.update(("ResizeTransformation" + targetHeight).getBytes());
+    }
+}
\ No newline at end of file
